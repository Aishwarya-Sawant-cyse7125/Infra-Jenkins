---
- name: Create Jenkins VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    tenancy: default
  register: jenkins_vpc

- name: Create Internet Gateway
  ec2_vpc_igw:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    tags:
      Name: "jenkins_igw"
  register: jenkins_igw

- name: Create Jenkins subnets
  ec2_vpc_subnet:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    az: "{{ item.value.az }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    cidr: "{{ item.value.cidr_block }}"
    tags:
      Name: "jenkins_{{ item.value.az }}"
  with_dict: "{{ vpc_subnets }}"
  register: jenkins_vpc_subnets

- name: Grab the route tables
  ec2_vpc_route_table_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ jenkins_vpc.vpc.id }}"
  register: jenkins_route_table

- name: Update the route table in the vpc
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ jenkins_route_table.route_tables[0].id }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    tags:
      Name: "jenkins_route_table_{{ jenkins_vpc.vpc.id }}"
    subnets:
        - "{{ jenkins_vpc_subnets.results[0].subnet.id }}"
        - "{{ jenkins_vpc_subnets.results[1].subnet.id }}"
        - "{{ jenkins_vpc_subnets.results[2].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ jenkins_igw.gateway_id }}"
  register: jenkins_route_table_updated

# - name: Create Route Table
#   amazon.aws.ec2_vpc_route_table:
#     profile: "{{ aws_profile }}"
#     region: "{{ aws_region }}"
#     vpc_id: "{{ jenkins_vpc.vpc.id }}"
#     subnets:
#       - "{{ jenkins_vpc_subnets.results[0].subnet.id }}"
#       - "{{ jenkins_vpc_subnets.results[1].subnet.id }}"
#       - "{{ jenkins_vpc_subnets.results[2].subnet.id }}"
#     routes:
#       - dest: 0.0.0.0/0
#         gateway_id: "{{ jenkins_igw.gateway_id }}"
#     tags:
#       Name: "jenkins_route_table_{{ jenkins_vpc.vpc.id }}"
#   register: jenkins_route_table

- name: "Create ec2 Security Groups"
  ec2_group:
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ jenkins_vpc.vpc.id }}"
    name: "jenkins_sg_{{ jenkins_vpc.vpc.id }}"
    description: "jenkins security group for {{ jenkins_vpc.vpc.id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
  register: jenkins_sg

# - name: "Create key pair"
#   amazon.aws.ec2_key:
#     name: "{{ ec2_key_name }}"
#     region: "{{ aws_region }}"
#     profile: "{{ aws_profile }}"
#   register: jenkins_key_pair

- name: "Create an EC2 instance"
  ec2_instance:
    name: jenkins-ec2-instance
    key_name: "{{ ec2_key_name }}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    security_group: "{{ jenkins_sg.group_id }}"
    instance_type: "{{ instance_type }}"
    image_id: "{{ ami_id }}"
    volumes:
      - device_name: /dev/xvda
        ebs:
          volume_size: 20
          volume_type: gp2
          delete_on_termination: true
    state: running
    wait: yes
    tags:
      env: "{{ env }}"
    exact_count: 1
    vpc_subnet_id: "{{ jenkins_vpc_subnets.results[0].subnet.id }}"
    user_data: |
      #!/bin/sh
      sudo apt-get update -y
  register: jenkins_ec2_instance

- name: "Getting Reserved IP"
  ec2_eip_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      tag:Name: public-ip4
  register: ip4_address

- name: "Gather EC2 instance facts"
  ec2_instance_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:env": "{{ env }}"
      "instance-state-name": "running"
  register: jenkins_existing_ec2_instances

- name: "Asssociate Public Ip with Instance"
  ec2_eip:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    device_id: "{{ jenkins_existing_ec2_instances.instances[0].instance_id }}"
    public_ip: "{{ ip4_address.addresses[0].public_ip }}"

# - name: "Save private key file"
#   copy: content="{{ jenkins_key_pair.key.private_key }}" dest="./private_key.pem" mode=0400
#   when: jenkins_key_pair.changed

- name: Add jenkins as an A record
  route53:
    profile: "{{ aws_profile }}"
    state: present
    zone: "{{ domain_name }}"
    record: "{{ sub_domain }}"
    type: A
    ttl: 60
    value: "{{ ip4_address.addresses[0].public_ip }}"
    wait: yes
    overwrite: yes

- name: Add host for connecting to ec2 instance
  ansible.builtin.add_host:
    name: 'ubuntu@{{ ip4_address.addresses[0].public_ip }}'
    groups: "{{ group_name }}"
  when: jenkins_existing_ec2_instances.instances[0].instance_id is defined

- name: Print route table id
  ansible.builtin.debug:
    var: jenkins_route_table_updated.route_table.route_table_id

- name: Print vpc id
  ansible.builtin.debug:
    var: jenkins_vpc.vpc.id


    # var: jenkins_route_table.route_tables[0].associations[0].route_table_id