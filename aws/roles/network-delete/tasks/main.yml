- name: "Gather EC2 instance facts"
  ec2_instance_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:env": "{{ env }}"
      "instance-state-name": "running"
  register: jenkins_existing_ec2_instances

- name: "Getting Reserved IP"
  ec2_eip_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      tag:Name: public-ip4
  register: ip4_address

- name: "DisAsssociate Public Ip with Instance"
  ec2_eip:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    device_id: "{{ jenkins_existing_ec2_instances.instances[0].instance_id }}"
    public_ip: "{{ ip4_address.addresses[0].public_ip }}"
    state: absent
  tags: ['skip_ansible_lint']
  when: ip4_address.changed

- name: "Terminate the Instance"
  ec2_instance:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    state: terminated
    wait: yes
    instance_ids: ["{{ jenkins_existing_ec2_instances.instances[0].instance_id }}"]
  when: jenkins_existing_ec2_instances.instances[0].instance_id is defined

- name: "Get vpc details"
  ec2_vpc_net_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "jenkins-{{ aws_region }}-vpc"
  register: all_vpcs

- name: "Delete Route Table"
  ec2_vpc_route_table:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
    state: absent
  when: all_vpcs.vpcs[0].vpc_id is defined

- name: "Delete internet gateway"
  ec2_vpc_igw:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
    state: absent
  when: all_vpcs.vpcs[0].vpc_id is defined

- name: "Delete Subnet1"
  ec2_vpc_subnet:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
    cidr: "{{ subnet1_cidr }}"
    state: absent
  when: all_vpcs.vpcs[0].vpc_id is defined

- name: "Delete Subnet2"
  ec2_vpc_subnet:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
    cidr: "{{ subnet2_cidr }}"
    state: absent
  when: all_vpcs.vpcs[0].vpc_id is defined

- name: "Delete Subnet3"
  ec2_vpc_subnet:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
    cidr: "{{ subnet3_cidr }}"
    state: absent
  when: all_vpcs.vpcs[0].vpc_id is defined

- name: "Gather information about all Security Groups"
  ec2_group_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ all_vpcs.vpcs[0].vpc_id }}"
  register: all_sg
  when: all_vpcs.vpcs[0].vpc_id is defined
  # when: item.group_name != "default"
  # when: all_sg.security_groups is defined

- name: "Delete Security Groups in VPC"
  ec2_group:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    group_id: "{{ item.group_id }}"
    state: absent
  loop: "{{ all_sg.security_groups }}"
  when: item.group_name != "default" and all_vpcs.vpcs[0].vpc_id is defined

- name: Delete AWS VPC
  ec2_vpc_net:
    name: "{{ all_vpcs.vpcs[0].tags.Name }}"
    cidr_block: "{{ all_vpcs.vpcs[0].cidr_block }}"
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    state: absent
  when: all_vpcs.vpcs[0].vpc_id is defined

# - name: Delete SSH Key Pair
#   amazon.aws.ec2_key:
#     name: "{{ ec2_key_name }}"
#     region: "{{ aws_region }}"
#     profile: "{{ aws_profile }}"
#     state: absent
#   register: jenkins_key_pair

# - name: Remove private key file
#   ansible.builtin.file:
#     path: ./private_key.pem
#     state: absent
#   when: jenkins_key_pair.changed